{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parik\\\\OneDrive\\\\Desktop\\\\merntest\\\\troopformation\\\\frontend\\\\src\\\\components\\\\Registers.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const handleRegister = async event => {\n    event.preventDefault();\n    setLoading(true);\n    setMessage('');\n\n    // Log the data being sent to the server\n    console.log({\n      name,\n      email,\n      password\n    }); // Log the data\n\n    const response = await fetch('http://localhost:5000/api/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: name,\n        email,\n        password\n      }) // Send username instead of name\n    });\n    const data = await response.json();\n    setLoading(false);\n    if (response.ok) {\n      setMessage('Registration successful!'); // Success message\n      navigate('/login'); // Redirect to troop formation page after successful registration\n    } else {\n      setMessage(data.message || 'Registration failed'); // Error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\" // Unique id added\n        ,\n        name: \"name\" // Unique name added\n        ,\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\" // Unique id added\n        ,\n        name: \"email\" // Unique name added\n        ,\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\" // Unique id added\n        ,\n        name: \"password\" // Unique name added\n        ,\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Registering...' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"suaOVngQ5awiHGrXbwUOUkQFcOo=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Register","_s","name","setName","email","setEmail","password","setPassword","message","setMessage","loading","setLoading","navigate","handleRegister","event","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","username","data","json","ok","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","e","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/parik/OneDrive/Desktop/merntest/troopformation/frontend/src/components/Registers.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\n\r\nconst Register = () => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n    const handleRegister = async (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setMessage('');\r\n\r\n        // Log the data being sent to the server\r\n        console.log({ name, email, password }); // Log the data\r\n\r\n        const response = await fetch('http://localhost:5000/api/auth/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username: name, email, password }), // Send username instead of name\r\n        });\r\n\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        \r\n        if (response.ok) {\r\n            setMessage('Registration successful!'); // Success message\r\n            navigate('/login'); // Redirect to troop formation page after successful registration\r\n        } else {\r\n            setMessage(data.message || 'Registration failed'); // Error message\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Register</h1>\r\n            <form onSubmit={handleRegister}>\r\n                <label htmlFor=\"name\">Name:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"name\" // Unique id added\r\n                    name=\"name\" // Unique name added\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    required\r\n                />\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"email\" // Unique id added\r\n                    name=\"email\" // Unique name added\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                />\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\" // Unique id added\r\n                    name=\"password\" // Unique name added\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Registering...' : 'Register'}\r\n                </button>\r\n            </form>\r\n            {message && <p>{message}</p>} {/* Display success/error message */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}